
using System;
using System.Diagnostics;
using System.IO;
using System.Runtime.CompilerServices;
using System.Runtime.Serialization.Formatters.Binary;
using System.Security.Cryptography.X509Certificates;


class RWData
{
    static void Main()
    {
        printTraceConfig();
        printTraceData();
        printAlgorithms();
    }

    private static void printTraceData()
    {
        string filePath = @"C:\Users\davis\source\repos\Reformed_Memory_Hierarchy\Reformed_Memory_Hierarchy\trace.dat";
       
        using (StreamReader sr = new StreamReader(filePath))
        {
            string fileContents = sr.ReadToEnd();
            Console.WriteLine("       \n");
            Console.WriteLine("trace.dat");
            Console.WriteLine("------------------------------------------------------------------------------------------------------------------------");
            Console.WriteLine(fileContents);
            sr.Close();
        }
    }

    private static void printTraceConfig()
    {
        string filePathway = @"C:\Users\davis\source\repos\Reformed_Memory_Hierarchy\Reformed_Memory_Hierarchy\trace.dat";


        using (StreamReader tr = new StreamReader(filePathway))
        {
            string? lineContents = tr.ReadLine();
            Console.WriteLine(lineContents);

        }

        Console.WriteLine("trace.config");
        Console.WriteLine("-----------------------------------------------------------------------------------------------------------------------------");
        Console.WriteLine("Page Table Configuration: ");
        Console.WriteLine("Number of virtual pages: 100");
        Console.WriteLine("Number of physical pages: 108296");
        Console.WriteLine("Page size: 256");
        Console.WriteLine(" \n");
    }
    private static void printAlgorithms()
    {
        string filePathways = @"C:\Users\davis\source\repos\Reformed_Memory_Hierarchy\Reformed_Memory_Hierarchy\trace.dat";

        using (StreamReader sr = new StreamReader(filePathways))
        {
            string lineContents = sr.ReadToEnd();
            Console.WriteLine(lineContents);
        }


        Console.WriteLine(" \n");
        Console.WriteLine("------------------------------------------------------------------------------------------------------------------------------");
        Console.WriteLine("D-cache contains 4 sets.\n");
        Console.WriteLine("Each set contains 1 entries.\n");
        Console.WriteLine("Each line is  bytes.\n");
        Console.WriteLine("The cache uses a write allocate and write-back policy.\n");
        Console.WriteLine("Number of bits used for the index is 4 bits or 1 nibble. \n");
        Console.WriteLine("Number of bits used for the offset is 28, \n");
        

        Console.WriteLine("L2-cache contains 4 sets. \n");
        Console.WriteLine("Each set contains 1 entries. \n");
        Console.WriteLine("Each line is 4 bytes.\n");
        Console.WriteLine("The cache uses a write-allocate and write-back policy.\n");
        Console.WriteLine("Number of bits used for the index is 4 bits or 1 nibble\n");
        Console.WriteLine("Number of bits used for the offset is 28 bits \n");
        Console.WriteLine("The addresses read in are virtual addresses.\n");





    }



    
}

